// 一个用来在调用时可以延时的方法
private void Start(){
StartCoroutine("MethodName");
StartCoroutine(MethodName());
StopCoroutine(MethodName());
StopAllCoroutine();

}
IEnumerator MethodName(){
//Do stuff
Transform.ect
yield return new WaitForseconds(1f);
// do more stuff after one sceond;
}

------------------------
Wait for one frame

IEnumerator WaitsOneFrame()
{
// do stuff
yield return null;
//do stuff
yield return null;
//do stuff
}

-------------------------------
//Wait Until a condition
//Create a bool condition
Private bool [layerScoreCompare()
{
return playerScore>100
}

IEnumerator WaitUntil True(){
 yield return new WaitUnitil(（=》PlayerScoreCompare());
---------------------------------------
使用coroutine 做时间offset动画
	public class DropTween : MonoBehaviour
	{
		public static float timeOffset = 0;
		public float scaleTime = 0.5f;
		Vector3 destination;

		private void Start()
		{
			destination = gameObject.transform.position;
			gameObject.transform.position += new Vector3(0, 10, 0);
			scaleTime += timeOffset;
			timeOffset += 0.01f;
			StartCoroutine(Grow());
		}

		private IEnumerator Grow()
		{
			Vector3 position = gameObject.transform.position;

			float currentTime = 0.0f;

			do
			{
				gameObject.transform.position = Vector3.Lerp(position, destination, currentTime / scaleTime);
				currentTime += Time.deltaTime;
				yield return null;
			} while (currentTime <= scaleTime);
			gameObject.transform.position = destination;
		}

		public static void IncreaseDropTime()
		{
			timeOffset += 0.01f;
		}

		public static void ResetTime()
		{
			timeOffset = 0;
		}
	}
}
